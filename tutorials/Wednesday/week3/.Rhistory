# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("tidyverse", "lubridate"),  pkgTest)
# set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Import movies.csv
dm <- read.csv("movies.csv")
# Import movies.csv
dm <- read.csv("movies.csv")
View(dm)
str(dm)
# Check which variables in dm are character
char_vecs <- sapply(dm, is.character)
char_vecs
# Get values for each character variable
unique <- Map(length, lapply(dm[,char_vecs], unique))
unique
unique(dm)
unique(dm$studio)
# Subset character variables with >2 and <=12 unique values
factors <- names(dm[,char_vecs][,unique <= 11 & unique > 2])
# Convert these into factor variable
dm[,factors] <- lapply(dm[,factors], as.factor)
# Re-level factors, aka change order of levels
# For mpaa_rating
levels(dm$mpaa_rating)
dm$mpaa_rating <- factor(dm$mpaa_rating,
levels = c("G", "PG", "PG-13", # new level order
"R", "NC-17", "Unrated"))
levels(dm$mpaa_rating)
# And for critics_rating
levels(dm$critics_rating)
dm$critics_rating <- factor(dm$critics_rating,
levels = c("Rotten", "Fresh", # new level order
"Certified Fresh"))
levels(genre)
levels(dm$genre)
unique(dm$gerne)
unique(dm$genre)
list(unique(dm$genre))
# Convert audience_rating into factor (not included in subset above)
names(dm[,char_vecs][,unique == 2])
str(dm$audience_rating)
dm$audience_rating <- factor(dm$audience_rating,
levels = c("Spilled", "Upright"))
# Check which variables in dm are logical
logical <- names(dm[,char_vecs][,unique == 2])
logical
dm[,logical]
# Recode "yes"/"no" to TRUE/FALSE
dm[,logical] <- ifelse(dm[,logical] == "no", FALSE, TRUE)
# Convert into logical variables
dm[,logical] <- lapply(dm[,logical], as.logical)
dm$thtr_rel_date <- make_date(dm$thtr_rel_year,
dm$thtr_rel_month,
dm$thtr_rel_day)
?make_date
dm$dvd_rel_date <- make_date(dm$dvd_rel_year,
dm$dvd_rel_month,
dm$dvd_rel_day)
# Remove original variables
dm <- dm[, !names(dm) %in% c("thtr_rel_year",
"thtr_rel_month",
"thtr_rel_day",
"dvd_rel_year",
"dvd_rel_month",
"dvd_rel_day")]
# Save tidy version of dm
saveRDS(dm, "movies_updated.rds")
View(dm)
